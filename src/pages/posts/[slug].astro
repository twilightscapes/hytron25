---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "@/layouts/BlogPost.astro";

export async function getStaticPaths() {
	const posts = await getCollection("post");

	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

// For server mode, fetch the post dynamically if not provided via static paths
const { slug } = Astro.params;
let post: CollectionEntry<"post"> | undefined;

if (Astro.props.post) {
	// Static mode - post provided via getStaticPaths
	post = Astro.props.post;
} else {
	// Server mode - fetch post dynamically
	const posts = await getCollection("post");
	post = posts.find((p) => p.slug === slug);
}

if (!post) {
	return Astro.redirect("/404");
}

type Props = {
	post?: CollectionEntry<"post">;
};

const { Content } = await post.render();
---

<BlogPost post={post!}>
	<Content />
</BlogPost>
